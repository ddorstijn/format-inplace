WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT    =  { (("/*" ~ (!"*/" ~ ANY)* ~ "*/") | ("-- " ~ (!"\n" ~ ANY)*)) }

open_paren   = { "(" }
close_paren  = { ")" }
comma        = { "," }
double_quote = { "\"" }
single_quote = { "'" }
delimiter    = { ";" }

identifier = @{ (ASCII_ALPHANUMERIC | "$" | "." | "_" | "*")+ }
element    =  { !block_kw ~ (identifier | operator | comma | between | paren | case | string | quoted | join) }
string     =  { single_quote ~ (!single_quote ~ ANY)* ~ single_quote }
quoted     =  { double_quote ~ (!double_quote ~ ANY)* ~ double_quote }
operator   =  { ">=" | "<>" | "!=" | "<=" | "+" | "-" | "/" | ">" | "<" | "=" }

block    = { block_kw+ ~ element* }
block_kw = {
    select_kw
  | distinct_kw
  | top_kw
  | insert_kw
  | into_kw
  | values_kw
  | update_kw
  | set_kw
  | delete_kw
  | from_kw
  | relate_kw
  | where_kw
  | and_kw
  | or_kw
  | group_kw
  | by_kw
  | order_kw
  | asc_kw
  | desc_kw
}

select_kw   = { ^"SELECT" }
distinct_kw = { ^"DISTINCT" }
top_kw      = { ^"TOP" }
insert_kw   = { ^"INSERT" }
into_kw     = { ^"INTO" }
values_kw   = { ^"VALUES" }
update_kw   = { ^"UPDATE" }
set_kw      = { ^"SET" }
delete_kw   = { ^"DELETE" }
from_kw     = { ^"FROM" }
relate_kw   = { ^"RELATE" }
where_kw    = { ^"WHERE" }
and_kw      = { ^"AND" }
or_kw       = { ^"OR" }
by_kw       = { ^"BY" }
group_kw    = { ^"GROUP" }
order_kw    = { ^"ORDER" }
desc_kw     = { ^"DESC" }
asc_kw      = { ^"ASC" }

join     = { (left_kw | right_kw | full_kw | inner_kw | outer_kw)* ~ join_kw ~ element ~ on_kw? ~ element ~ (and_kw ~ element+)* }
join_kw  = { ^"JOIN" }
left_kw  = { ^"LEFT" }
right_kw = { ^"RIGHT" }
full_kw  = { ^"FULL" }
inner_kw = { ^"INNER" }
outer_kw = { ^"OUTER" }
on_kw    = { ^"ON" }

between    = { between_kw ~ (!and_kw ~ element+) ~ and_kw ~ element+ }
between_kw = { ^"BETWEEN" }

case    = { case_kw ~ (!end_kw ~ element+) ~ end_kw }
case_kw = { ^"CASE" }
end_kw  = { ^"END" }

paren = { open_paren ~ ((and_kw | or_kw | element)+ | block+)* ~ close_paren }

statement = { block+ ~ delimiter? }
query     = { SOI ~ statement+ ~ EOI }
